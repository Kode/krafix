name: Linux

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-x86_64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Submodules
      run: git submodule update --init --recursive

    - name: Setup latest Alpine Linux
      id: alpine-target
      uses: jirutka/setup-alpine@v1
      with:
        packages: >
          build-base
          git
          linux-headers
          ninja

    - name: Build in Alpine chroot
      run: |
        cd /home/runner/work/krafix/krafix
        git clone --depth 1 https://github.com/Kode/KoreTools_linux_x64.git KoreTools
        ./KoreTools/kmake --compile
      shell: alpine.sh --root {0}

    - name: Get KoreTools_linux_x64
      run: git clone https://github.com/Kode/KoreTools_linux_x64.git
    - name: Copy binary
      run: cp /home/runner/work/krafix/krafix/build/release/krafix KoreTools_linux_x64/krafix
    - name: Set name
      run: git config --global user.name "Robbot"
    - name: Set email
      run: git config --global user.email "robbot2019@robdangero.us"
    - name: Commit binary
      id: commit
      continue-on-error: true
      run: git -C KoreTools_linux_x64 commit -a -m "Update krafix binary to $GITHUB_SHA."
    - name: Tag binary
      if: steps.commit.outcome == 'success'
      run: git -C KoreTools_linux_x64 tag krafix_$GITHUB_SHA
    - name: Push binary
      id: push1
      if: steps.commit.outcome == 'success'
      continue-on-error: true
      run: git -C KoreTools_linux_x64 push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KoreTools_linux_x64.git main --tags
      env:
        ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
    - name: Pull
      if: steps.commit.outcome == 'success' && steps.push1.outcome != 'success'
      run: git -C KoreTools_linux_x64 pull --no-rebase
    - name: Push binary again
      if: steps.commit.outcome == 'success' && steps.push1.outcome != 'success'
      continue-on-error: true
      run: git -C KoreTools_linux_x64 push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KoreTools_linux_x64.git main --tags
      env:
        ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}


  build-aarch64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Submodules
      run: git submodule update --init --recursive

    - name: Setup latest Alpine Linux
      uses: jirutka/setup-alpine@v1
      with:
        packages: >
          build-base
          wget
          linux-headers
          git
          ninja

    - name: Download and extract musl
      working-directory: /home/runner/work
      run: |
        wget http://kode.tech/aarch64-linux-musl-cross.tgz
        tar --extract --preserve-permissions --file aarch64-linux-musl-cross.tgz

    - name: Build in Alpine chroot
      run: |
        export PATH=$PATH:/home/runner/work/aarch64-linux-musl-cross/bin
        cd /home/runner/work/krafix/krafix
        git clone --depth 1 https://github.com/Kode/KoreTools_linux_x64.git KoreTools
        ./KoreTools/kmake --compile --cc aarch64-linux-musl-gcc --cxx aarch64-linux-musl-g++ --strip aarch64-linux-musl-strip
      shell: alpine.sh --root {0}

    - name: Get KoreTools_linux_arm64
      run: git clone https://github.com/Kode/KoreTools_linux_arm64.git
    - name: Copy binary
      run: cp /home/runner/work/krafix/krafix/build/release/krafix KoreTools_linux_arm64/krafix
    - name: Set name
      run: git config --global user.name "Robbot"
    - name: Set email
      run: git config --global user.email "robbot2019@robdangero.us"
    - name: Commit binary
      id: commit
      continue-on-error: true
      run: |
        git -C KoreTools_linux_arm64 commit -a -m "Update krafix_arm64 binary to $GITHUB_SHA."
    - name: Tag binary
      if: steps.commit.outcome == 'success'
      run: git -C KoreTools_linux_arm64 tag krafix_$GITHUB_SHA
    - name: Push binary
      id: push1
      if: steps.commit.outcome == 'success'
      continue-on-error: true
      run: git -C KoreTools_linux_arm64 push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KoreTools_linux_arm64.git main --tags
      env:
        ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
    - name: Pull
      if: steps.commit.outcome == 'success' && steps.push1.outcome != 'success'
      run: git -C KoreTools_linux_arm64 pull --no-rebase
    - name: Push binary again
      if: steps.commit.outcome == 'success' && steps.push1.outcome != 'success'
      continue-on-error: true
      run: git -C KoreTools_linux_arm64 push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KoreTools_linux_arm64.git main --tags
      env:
        ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}


  build-armv7l:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Submodules
      run: git submodule update --init --recursive

    - name: Setup latest Alpine Linux
      uses: jirutka/setup-alpine@v1
      with:
        packages: >
          build-base
          wget
          linux-headers
          git
          ninja

    - name: Download and extract musl
      working-directory: /home/runner/work
      run: |
        wget http://kode.tech/armv7l-linux-musleabihf-cross.tgz
        tar --extract --preserve-permissions --file armv7l-linux-musleabihf-cross.tgz

    - name: Build in Alpine chroot
      run: |
        export PATH=$PATH:/home/runner/work/armv7l-linux-musleabihf-cross/bin
        cd /home/runner/work/krafix/krafix
        git clone --depth 1 https://github.com/Kode/KoreTools_linux_x64.git KoreTools
        ./KoreTools/kmake --compile --cc armv7l-linux-musleabihf-gcc --cxx armv7l-linux-musleabihf-g++ --strip armv7l-linux-musleabihf-strip

      shell: alpine.sh --root {0}

    - name: Get KoreTools_linux_arm
      run: git clone https://github.com/Kode/KoreTools_linux_arm.git
    - name: Copy binary
      run: cp /home/runner/work/krafix/krafix/build/release/krafix KoreTools_linux_arm/krafix
    - name: Set name
      run: git config --global user.name "Robbot"
    - name: Set email
      run: git config --global user.email "robbot2019@robdangero.us"
    - name: Commit binary
      id: commit
      continue-on-error: true
      run: |
        git -C KoreTools_linux_arm commit -a -m "Update krafix_arm binary to $GITHUB_SHA."
    - name: Tag binary
      if: steps.commit.outcome == 'success'
      run: git -C KoreTools_linux_arm tag krafix_$GITHUB_SHA
    - name: Push binary
      id: push1
      if: steps.commit.outcome == 'success'
      continue-on-error: true
      run: git -C KoreTools_linux_arm push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KoreTools_linux_arm.git main --tags
      env:
        ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
    - name: Pull
      if: steps.commit.outcome == 'success' && steps.push1.outcome != 'success'
      run: git -C KoreTools_linux_arm pull --no-rebase
    - name: Push binary again
      if: steps.commit.outcome == 'success' && steps.push1.outcome != 'success'
      continue-on-error: true
      run: git -C KoreTools_linux_arm push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KoreTools_linux_arm.git main --tags
      env:
        ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
